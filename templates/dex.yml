{{ if .Values.dex }}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: dex
  name: dex
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: dex
  name: dex
spec:
  revisionHistoryLimit: 0
  replicas: 1
  selector:
    matchLabels:
      app: dex
  template:
    metadata:
      labels:
        app: dex
      annotations:
        keel.sh/policy: minor
        keel.sh/trigger: poll
        keel.sh/pollSchedule: "@midnight"
    spec:
      serviceAccountName: dex
      containers:
      - image: ghcr.io/dexidp/dex:v2.33.0
        name: dex
        command: ["/usr/local/bin/dex", "serve", "/etc/dex/cfg/config.yaml"]
        resources:
          requests:
            cpu: 1m
        ports:
        - name: https
          containerPort: 5556
        volumeMounts:
        - name: config
          mountPath: /etc/dex/cfg
        readinessProbe:
          httpGet:
            path: /healthz
            port: 5556
      volumes:
      - name: config
        configMap:
          name: dex
          items:
          - key: config.yaml
            path: config.yaml
---
kind: ConfigMap
apiVersion: v1
metadata:
  name: dex
data:
  config.yaml: |
    issuer: https://dex{{- template "hostname-suffix" . }}
    storage:
      type: kubernetes
      config:
        inCluster: true
    web:
      http: 0.0.0.0:5556
    connectors:
    - type: oidc
      id: upstream-dex
      name: Upstream Dex
      config:
        clientID: dex-{{ .Values.username }}
        clientSecret: 7lQXo5AOxbTQkxI2SZTJ
        issuer: https://dex.codemowers.eu
        redirectURI: https://dex{{- template "hostname-suffix" . }}/callback
    oauth2:
      skipApprovalScreen: true
    staticClients:
    - id: argocd
      name: 'ArgoCD'
      redirectURIs:
      - 'https://argocd{{- template "hostname-suffix" . }}/auth/callback'
      secret: ChEHLsGhAE38DLG4pMON
    - id: traefik
      name: 'Traefik'
      redirectURIs:
      - 'https://auth{{- template "hostname-suffix" . }}/_oauth'
      secret: RzkdArMBaPOALOP99657
    - id: grafana
      name: 'Grafana'
      redirectURIs:
      - 'https://grafana{{- template "hostname-suffix" . }}/login/generic_oauth'
      secret: vzl5T4VOPV8yUZeO33wm
---
apiVersion: v1
kind: Service
metadata:
  name: dex
spec:
  ports:
  - name: dex
    port: 5556
    protocol: TCP
    targetPort: 5556
  selector:
    app: dex
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: "{{ .Release.Namespace }}-dex"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: dex
subjects:
- kind: ServiceAccount
  name: dex
  namespace: "{{ .Release.Namespace }}"
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: dex
  annotations:
    traefik.ingress.kubernetes.io/router.entrypoints: websecure
    traefik.ingress.kubernetes.io/router.tls: "true"
    kubernetes.io/ingress.class: shared
    external-dns.alpha.kubernetes.io/target: traefik.codemowers.cloud
spec:
  rules:
  - host: "dex{{- template "hostname-suffix" . }}"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: dex
            port:
              number: 5556
{{- template "tls" . }}
{{ end }}
